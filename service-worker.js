!function(){"use strict";const e=["client/client.2cc372f7.js","client/index.d34ba6fd.js","client/2x03-vintage-envelope-border-image.85ece3cd.js","client/Borders.6ca18814.js","client/2x01-continouse-image-border.2064aaa3.js","client/0x02-extended-position-bg.d6092ef3.js","client/0x00-translucent-borders.efc8dd1c.js","client/1x00-horizontal-stripes.f385342f.js","client/Backgrounds.89369d8d.js","client/1x03-diagnal-60-stripes.dddf000c.js","client/0x03-background-origin.e6ccf447.js","client/0x01-multiple-borders.717d771d.js","client/1x01-vertical-stripes.883fef82.js","client/1x07-checkerboard-svg.50868f56.js","client/2x02-vintage-envelope.66bf3aec.js","client/0x04-background-calc.a3b2a292.js","client/1x02-diagnal-stripes.eb81abd6.js","client/0x05-inner-rounding.def711bf.js","client/3x00-parallelograms.4ae0b6ab.js","client/1x06-checkerboard.0ddff6f2.js","client/2x00-border-image.a8bd3946.js","client/1x04-blueprint.f3eddaa6.js","client/2x04-ant-match.aa99758e.js","client/3x01-diamond.f7c6c2a2.js","client/1x05-polka.8ef8ba0a.js","client/client.a04acd37.js"].concat(["service-worker-index.html","code-pirate.svg","favicon.ico","icons/icon-144x144.png","icons/icon-192x192.png","icons/icon-256x256.png","icons/icon-384x384.png","icons/icon-48x48.png","icons/icon-512x512.png","icons/icon-72x72.png","icons/icon-96x96.png","manifest.json","stone-art.jpg"]),n=new Set(e);self.addEventListener("install",n=>{n.waitUntil(caches.open("cache1585559006557").then(n=>n.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const n of e)"cache1585559006557"!==n&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&n.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1585559006557").then(async n=>{try{const t=await fetch(e.request);return n.put(e.request,t.clone()),t}catch(t){const c=await n.match(e.request);if(c)return c;throw t}}))))})}();
